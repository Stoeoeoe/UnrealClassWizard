<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    mc:Ignorable="d">

    <Color x:Key="LabelColor">#FFFFFF</Color>
    <Color x:Key="LabelColorDark">#FFFFFF</Color>
    <Color x:Key="LightGrayColor">#FFCBCBCB</Color>
    <Color x:Key="LightBorderColor">#FFE2E2E2</Color>
    <Color x:Key="ControlGradientDark">#AAAAAA</Color>
    <Color x:Key="ControlGradientLight">#DCDCDC</Color>
    <Color x:Key="DarkTextColor">#FF000000</Color>
    <Color x:Key="FocusColor">#FFFEDD44</Color>
    <Color x:Key="FocusColorLight">#FFFFEEA0</Color>
	<Color x:Key="FocusColorDark">#FFCCB137</Color>
	<Color x:Key="LinkColor">LightBlue</Color>


    <SolidColorBrush x:Key="DarkBackground" Color="#FF404040"/>
    <SolidColorBrush x:Key="SemiBackground" Color="#FF404040"/>
    <SolidColorBrush x:Key="LightBackground" Color="#FF606060"/>

    <SolidColorBrush x:Key="LinkBrush" Color="{StaticResource LinkColor}"/>


    <SolidColorBrush x:Key="LabelForegroundBrush" Color="{StaticResource LabelColor}"/>
    <SolidColorBrush x:Key="LabelForegroundDarkBrush" Color="{StaticResource LabelColorDark}"/>
    <SolidColorBrush x:Key="ControlGrayBackgroundBrush" Color="{StaticResource LightGrayColor}"/>
    <SolidColorBrush x:Key="ControlGrayDarkBackgroundBrush" Color="{StaticResource ControlGradientDark}"/>
    <SolidColorBrush x:Key="DarkControlForegroundBrush" Color="{StaticResource DarkTextColor}"/>
    <SolidColorBrush x:Key="LightBorderBrush" Color="{StaticResource LightBorderColor}"/>
	<SolidColorBrush x:Key="FocusBrush" Color="{StaticResource FocusColor}"/>
	<SolidColorBrush x:Key="FocusDarkBrush" Color="{StaticResource FocusColorDark}"/>
    <SolidColorBrush x:Key="FocusLightBrush" Color="{StaticResource FocusColorLight}"/>

    <LinearGradientBrush x:Key="ControlGrayGradientBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ControlGradientDark}" Offset="0"/>
        <GradientStop Color="{StaticResource ControlGradientLight}" Offset="1"/>
    </LinearGradientBrush>
    

    <!-- Label Style -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}"/>
    </Style>
    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
    	<Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}"/>
    </Style>
    <Style x:Key="TitleStyle" TargetType="{x:Type Label}">
    	<Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="FontWeight" Value="Bold"/>

    </Style>

    <!-- TextBox Style -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource ControlGrayBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkControlForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <!-- CheckBox Style -->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource ControlGrayBackgroundBrush}"/>
    </Style>

    <!-- Button Style -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource DarkControlForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource ControlGrayGradientBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <!-- TabControl Style -->
    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Background" Value="{StaticResource ControlGrayBackgroundBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                            <Border x:Name="innerBorder" BorderBrush="{StaticResource LightBorderBrush}" BorderThickness="1,1,1,0" Background="White" Margin="-1" Opacity="0"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFECF4FC" Offset="0"/>
                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFECF4FC" Offset="0"/>
                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFECF4FC" Offset="0"/>
                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFECF4FC" Offset="0"/>
                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ComboBox Style -->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

	<!-- Navigation ListBoxItem style -->

    <Style x:Key="NavigationListBoxStyle" TargetType="{x:Type ListBox}">
    	<Setter Property="Background" Value="{StaticResource DarkBackground}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{DynamicResource LabelForegroundBrush}"/>
    	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ListBox}">
    				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
    					<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
    						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    					</ScrollViewer>
    				</Border>
    				<ControlTemplate.Triggers>
    					<MultiTrigger>
    						<MultiTrigger.Conditions>
    							<Condition Property="IsGrouping" Value="true"/>
    							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
    						</MultiTrigger.Conditions>
    						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    					</MultiTrigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

	<!-- Navigation ListBoxItem style -->
    <Style x:Key="NavigationListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
	    	<Setter Property="Foreground" Value="#FFFFFFFF"/>
	    	<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Template">
			<Setter.Value>
			<ControlTemplate TargetType="{x:Type ListBoxItem}">
    			<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
    				<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    			</Border>
    			<ControlTemplate.Triggers>
    				
					<MultiTrigger>
    					<MultiTrigger.Conditions>
    						<Condition Property="IsMouseOver" Value="True"/>
    					</MultiTrigger.Conditions>
    					<Setter Property="Background" TargetName="Bd" Value="{StaticResource FocusDarkBrush}"/>
    					<Setter Property="Foreground" Value="Black"/>
    				</MultiTrigger>

    				<MultiTrigger>
    					<MultiTrigger.Conditions>
    						<Condition Property="IsSelected" Value="True"/>
    					</MultiTrigger.Conditions>
    					<Setter Property="Background" TargetName="Bd" Value="{StaticResource FocusBrush}"/>
    					<Setter Property="Foreground" Value="Black"/>
						
    				</MultiTrigger>


					<MultiTrigger>
    					<MultiTrigger.Conditions>
    						<Condition Property="IsSelected" Value="False"/>
							<Condition Property="ItemsControl.AlternationIndex" Value="1"/>
							<Condition Property="IsMouseOver" Value="False"/>
    					</MultiTrigger.Conditions>
    						<Setter Property="Background" TargetName="Bd" Value="Gray"/>
    				</MultiTrigger>

					<MultiTrigger>
    					<MultiTrigger.Conditions>
    						<Condition Property="IsSelected" Value="False"/>
							<Condition Property="ItemsControl.AlternationIndex" Value="2"/>
							<Condition Property="IsMouseOver" Value="False"/>
    					</MultiTrigger.Conditions>
    						<Setter Property="Background" TargetName="Bd" Value="DarkGray"/>
    				</MultiTrigger>



    			</ControlTemplate.Triggers>
			</ControlTemplate>

			</Setter.Value>
		</Setter>

        <Style.Triggers>
            <!-- valid XAML but does not work in the designer and causes an error -->
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="Gray"/>
            </Trigger>

            <!-- valid alternate XAML that works in the designer -->
            <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>
    

</ResourceDictionary>